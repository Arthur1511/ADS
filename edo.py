"""
Esse Ã© um script para edo's lineares
"""

import numpy as np

# A = np.mat([[-6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [3, -10, 0, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [3, 0, -8, 0, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 3, 0, -10, 0, 0, 4, 2, 0, 0, 0, 0, 0, 0, 0],
#             [0, 3, 3, 0, -12, 0, 0, 4, 2, 0, 0, 0, 0, 0, 0],
#             [0, 0, 3, 0, 0, -8, 0, 0, 4, 2, 0, 0, 0, 0, 0],
#             [0, 0, 0, 3, 0, 0, -10, 0, 0, 0, 4, 2, 0, 0, 0],
#             [0, 0, 0, 3, 3, 0, 0, -12, 0, 0, 0, 4, 2, 0, 0],
#             [0, 0, 0, 0, 3, 3, 0, 0, -12, 0, 0, 4, 2, 0, 0],
#             [0, 0, 0, 0, 0, 3, 0, 0, 0, -8, 0, 0, 0, 4, 2],
#             [0, 0, 0, 0, 0, 0, 3, 0, 0, 0, -4, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, -6, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, -6, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, -6, 0],
#             [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])
#
# B = np.array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,1])

# sol = np.round(np.linalg.solve(A, B), 2)
# print(sol)

sol = np.round(
    np.linalg.solve(np.mat([[-1, 0, 1, 0, 0], [1, -2, 0, 1, 0], [0, 2, -2, 0, 1], [0, 0, 1, -3, 0], [1, 1, 1, 1, 1]]),
                    [0, 0, 0, 0, 1]), 2)

A = [[-30, 10, 0, 100],
     [5, -30, 0, 0],
     [10, 10, -50, 100],
     [1, 1, 1, 1]]

B = [0, 0, 0, 1]

sol = np.round(np.linalg.solve(A, B), 2)

print(sol)

# print(sum(sol))
